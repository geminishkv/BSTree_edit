# version: 7.9.4.5 {build}
version: 1.0.{build}

image: 
  - Ubuntu

install:
  - sudo apt -y install lcov

init:
    # секция инициализации, исполняется до клонирования проекта
    # скорее всего, строчка ниже необязательна (так должно быть по умолчанию),
    # вместе с тем, она присутствует в официальных примерах, так что пусть будет
    - git config --global core.autocrlf input

matrix:
    fast_finish: false           # не останавливаемся после возникновения ошибки в каком-то из заданий

platform:
    # будем гонять CI++ на amd64 и x86...
    - x64
    - x86

#configuration:
    # ... и в дебажной, и в релизной конфигурациях ...
    #- Debug
    #- Release

environment:
    matrix:
        # ... на трёх студиях (2010, 2012, 2015)
        - TOOLCHAIN: msvc10
        - TOOLCHAIN: msvc12
        - TOOLCHAIN: msvc14

#install:
    # скрипт настройки среды и установки зависимостей
    #- call ciappveyorset-env.bat %TOOLCHAIN% %PLATFORM%

    #- appveyor DownloadFile <url> -FileName <local-file>
    #- 7z e -y <local-file> -o<local-dir>

before_build:
  - cmake -H. -B_build -DCMAKE_INSTALL_PREFIX=_install -DBUILD_TESTS=ON -DBUILD_EXAMPLES=ON -DCMAKE_BUILD_TYPE=Coverage -DCPACK_GENERATOR="TGZ" 

build_script:
    # скрипт сборки проекта
    - cmake -H. -B_build -DCMAKE_INSTALL_PREFIX=_install -DBUILD_TESTS=ON -DBUILD_EXAMPLES=ON -DCMAKE_BUILD_TYPE=Coverage -DCPACK_GENERATOR="TGZ"
    - cmake --build _build
    - cmake --build _build --target install
    - cmake --build _build --target test -- ARGS=--verbose
    - cmake --build _build --target unit_tests_coverage
    - cmake --build _build --target package
  # - cmake .. %CMAKE_CONFIGURE_FLAGS%
  # - cmake --build . %CMAKE_BUILD_FLAGS%

after_build:
  - cd _build 
  - cpack -G "TGZ" 
  - cd ..
# - cmake --build _build --target package 

test_script:
    # скрипт тестирования проекта
    - cd _build
    - make unit_tests_coverage
  # - ctest -C %CONFIGURATION% --output-on-failure
  # - ./check -s -r compact

#artifacts:
#    - path: <local-package-path>
#    - name: package_name

 deploy:
    # выкладываем tagged-коммиты на GitHub Releases
    description: '$(APPVEYOR_REPO_TAG_NAME)'
    provider: GitHub

    auth_token:
        secure: <67d4ad69298447307c2dbe1dc61ef78f8a224352>

    artifact: package_name
    force_update: true

    on:
        appveyor_repo_tag: true

language: cpp

script:
- cmake -H. -B_build -DCMAKE_INSTALL_PREFIX=_install -DBUILD_TESTS=ON
- cmake --build _build
- cmake --build _build --target install
- cmake --build _build --target test -- ARGS=--verbose

init:
    # секция инициализации, исполняется до клонирования проекта
    # скорее всего, строчка ниже необязательна (так должно быть по умолчанию),
    # вместе с тем, она присутствует в официальных примерах, так что пусть будет
    - git config --global core.autocrlf input

matrix:
    fast_finish: false           # не останавливаемся после возникновения ошибки в каком-то из заданий

platform:
    # будем гонять CI на amd64 и x86...
    - x64
    - x86

configuration:
    # ... и в дебажной, и в релизной конфигурациях ...
    - Debug
    - Release

environment:
    matrix:
        # ... на трёх студиях (2010, 2012, 2015)
        - TOOLCHAIN: msvc10
        - TOOLCHAIN: msvc12
        - TOOLCHAIN: msvc14

install:
    # скрипт настройки среды и установки зависимостей
    - call ciappveyorset-env.bat %TOOLCHAIN% %PLATFORM%

    - appveyor DownloadFile <url> -FileName <local-file>
    - 7z e -y <local-file> -o<local-dir>

build_script:
    # скрипт сборки проекта
    - mkdir builds
    - cd builds
    - cmake .. %CMAKE_CONFIGURE_FLAGS%
    - cmake --build . %CMAKE_BUILD_FLAGS%

test_script:
    # скрипт тестирования проекта
    - ctest -C %CONFIGURATION% --output-on-failure

artifacts:
    - path: <local-package-path>
      name: package_name

deploy:
    # выкладываем tagged-коммиты на GitHub Releases
    description: '$(APPVEYOR_REPO_TAG_NAME)'
    provider: GitHub

    auth_token:
        secure: <encrypted-github-token>

    artifact: package_name
    force_update: true

    on:
        appveyor_repo_tag: true
